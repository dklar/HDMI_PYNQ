// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_data_stream_0_V_dout,
        p_src_data_stream_0_V_empty_n,
        p_src_data_stream_0_V_read,
        p_src_data_stream_1_V_dout,
        p_src_data_stream_1_V_empty_n,
        p_src_data_stream_1_V_read,
        p_src_data_stream_2_V_dout,
        p_src_data_stream_2_V_empty_n,
        p_src_data_stream_2_V_read,
        p_dst_data_stream_0_V_din,
        p_dst_data_stream_0_V_full_n,
        p_dst_data_stream_0_V_write,
        p_dst_data_stream_1_V_din,
        p_dst_data_stream_1_V_full_n,
        p_dst_data_stream_1_V_write,
        p_dst_data_stream_2_V_din,
        p_dst_data_stream_2_V_full_n,
        p_dst_data_stream_2_V_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp0_stage0 = 5'd8;
parameter    ap_ST_fsm_state8 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_data_stream_0_V_dout;
input   p_src_data_stream_0_V_empty_n;
output   p_src_data_stream_0_V_read;
input  [7:0] p_src_data_stream_1_V_dout;
input   p_src_data_stream_1_V_empty_n;
output   p_src_data_stream_1_V_read;
input  [7:0] p_src_data_stream_2_V_dout;
input   p_src_data_stream_2_V_empty_n;
output   p_src_data_stream_2_V_read;
output  [7:0] p_dst_data_stream_0_V_din;
input   p_dst_data_stream_0_V_full_n;
output   p_dst_data_stream_0_V_write;
output  [7:0] p_dst_data_stream_1_V_din;
input   p_dst_data_stream_1_V_full_n;
output   p_dst_data_stream_1_V_write;
output  [7:0] p_dst_data_stream_2_V_din;
input   p_dst_data_stream_2_V_full_n;
output   p_dst_data_stream_2_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_0_V_read;
reg p_src_data_stream_1_V_read;
reg p_src_data_stream_2_V_read;
reg p_dst_data_stream_0_V_write;
reg p_dst_data_stream_1_V_write;
reg p_dst_data_stream_2_V_write;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] and_ln118_reg_2515;
reg   [0:0] icmp_ln899_reg_2441;
reg   [0:0] icmp_ln887_reg_2432;
reg    p_src_data_stream_1_V_blk_n;
reg    p_src_data_stream_2_V_blk_n;
reg    p_dst_data_stream_0_V_blk_n;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] and_ln512_reg_2555;
reg   [0:0] and_ln512_reg_2555_pp0_iter2_reg;
reg    p_dst_data_stream_1_V_blk_n;
reg    p_dst_data_stream_2_V_blk_n;
reg   [10:0] t_V_2_reg_534;
wire   [1:0] add_ln400_fu_545_p2;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln443_fu_561_p2;
wire    ap_CS_fsm_state3;
wire   [9:0] i_V_fu_567_p2;
reg   [9:0] i_V_reg_2427;
wire   [0:0] icmp_ln887_fu_573_p2;
wire   [0:0] xor_ln457_fu_579_p2;
reg   [0:0] xor_ln457_reg_2436;
wire   [0:0] icmp_ln899_fu_595_p2;
wire   [0:0] icmp_ln879_fu_601_p2;
reg   [0:0] icmp_ln879_reg_2446;
wire   [0:0] icmp_ln879_1_fu_607_p2;
reg   [0:0] icmp_ln879_1_reg_2450;
wire   [0:0] icmp_ln899_1_fu_613_p2;
reg   [0:0] icmp_ln899_1_reg_2454;
wire   [1:0] xor_ln493_1_fu_767_p2;
reg   [1:0] xor_ln493_1_reg_2467;
wire   [1:0] xor_ln493_2_fu_805_p2;
reg   [1:0] xor_ln493_2_reg_2474;
wire   [1:0] xor_ln493_3_fu_843_p2;
reg   [1:0] xor_ln493_3_reg_2481;
reg   [7:0] right_border_buf_2_6_reg_2488;
wire    ap_block_state4_pp0_stage0_iter0;
reg    ap_predicate_op211_read_state5;
reg    ap_predicate_op223_read_state5;
reg    ap_predicate_op253_read_state5;
reg    ap_predicate_op265_read_state5;
reg    ap_predicate_op292_read_state5;
reg    ap_predicate_op301_read_state5;
reg    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
reg    ap_block_state7_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [7:0] right_border_buf_2_7_reg_2494;
reg   [7:0] right_border_buf_2_8_reg_2500;
wire   [0:0] icmp_ln444_fu_862_p2;
reg   [0:0] icmp_ln444_reg_2506;
reg   [0:0] icmp_ln444_reg_2506_pp0_iter1_reg;
wire   [10:0] j_V_fu_868_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] and_ln118_fu_916_p2;
wire   [1:0] trunc_ln458_fu_976_p1;
reg   [1:0] trunc_ln458_reg_2519;
wire   [0:0] or_ln457_fu_980_p2;
reg   [0:0] or_ln457_reg_2524;
reg   [10:0] k_buf_0_val_3_addr_reg_2537;
reg   [10:0] k_buf_0_val_4_addr_reg_2543;
reg   [10:0] k_buf_0_val_5_addr_reg_2549;
wire   [0:0] and_ln512_fu_998_p2;
reg   [0:0] and_ln512_reg_2555_pp0_iter1_reg;
reg   [10:0] k_buf_1_val_3_addr_reg_2559;
reg   [10:0] k_buf_1_val_4_addr_reg_2565;
reg   [10:0] k_buf_1_val_5_addr_reg_2571;
reg   [10:0] k_buf_2_val_3_addr_reg_2577;
reg   [10:0] k_buf_2_val_4_addr_reg_2583;
reg   [10:0] k_buf_2_val_5_addr_reg_2589;
wire   [7:0] src_kernel_win_0_va_6_fu_1133_p3;
reg   [7:0] src_kernel_win_0_va_6_reg_2595;
wire   [7:0] src_kernel_win_0_va_7_fu_1151_p3;
reg   [7:0] src_kernel_win_0_va_7_reg_2602;
reg   [7:0] src_kernel_win_0_va_7_reg_2602_pp0_iter2_reg;
wire   [7:0] src_kernel_win_0_va_8_fu_1169_p3;
reg   [7:0] src_kernel_win_0_va_8_reg_2609;
wire   [7:0] src_kernel_win_1_va_6_fu_1301_p3;
reg   [7:0] src_kernel_win_1_va_6_reg_2616;
wire   [7:0] src_kernel_win_1_va_7_fu_1319_p3;
reg   [7:0] src_kernel_win_1_va_7_reg_2623;
reg   [7:0] src_kernel_win_1_va_7_reg_2623_pp0_iter2_reg;
wire   [7:0] src_kernel_win_1_va_8_fu_1337_p3;
reg   [7:0] src_kernel_win_1_va_8_reg_2630;
wire   [7:0] src_kernel_win_2_va_9_fu_1445_p3;
reg   [7:0] src_kernel_win_2_va_9_reg_2637;
wire   [7:0] src_kernel_win_2_va_10_fu_1463_p3;
reg   [7:0] src_kernel_win_2_va_10_reg_2644;
reg   [7:0] src_kernel_win_2_va_10_reg_2644_pp0_iter2_reg;
wire   [7:0] src_kernel_win_2_va_11_fu_1481_p3;
reg   [7:0] src_kernel_win_2_va_11_reg_2651;
reg   [0:0] p_Result_s_reg_2658;
wire   [7:0] add_ln703_4_fu_1613_p2;
reg   [7:0] add_ln703_4_reg_2664;
wire   [7:0] add_ln703_5_fu_1619_p2;
reg   [7:0] add_ln703_5_reg_2669;
wire   [0:0] icmp_ln785_fu_1634_p2;
reg   [0:0] icmp_ln785_reg_2674;
reg   [0:0] p_Result_1_reg_2679;
wire   [7:0] add_ln703_12_fu_1765_p2;
reg   [7:0] add_ln703_12_reg_2685;
wire   [7:0] add_ln703_13_fu_1771_p2;
reg   [7:0] add_ln703_13_reg_2690;
wire   [0:0] icmp_ln785_1_fu_1786_p2;
reg   [0:0] icmp_ln785_1_reg_2695;
reg   [0:0] p_Result_2_reg_2700;
wire   [7:0] add_ln703_20_fu_1917_p2;
reg   [7:0] add_ln703_20_reg_2706;
wire   [7:0] add_ln703_21_fu_1923_p2;
reg   [7:0] add_ln703_21_reg_2711;
wire   [0:0] icmp_ln785_2_fu_1938_p2;
reg   [0:0] icmp_ln785_2_reg_2716;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_enable_reg_pp0_iter2;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
wire   [10:0] k_buf_0_val_3_address1;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
wire   [10:0] k_buf_0_val_4_address1;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
wire   [10:0] k_buf_0_val_5_address1;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
wire   [10:0] k_buf_1_val_3_address0;
reg    k_buf_1_val_3_ce0;
wire   [7:0] k_buf_1_val_3_q0;
wire   [10:0] k_buf_1_val_3_address1;
reg    k_buf_1_val_3_ce1;
reg    k_buf_1_val_3_we1;
wire   [10:0] k_buf_1_val_4_address0;
reg    k_buf_1_val_4_ce0;
wire   [7:0] k_buf_1_val_4_q0;
wire   [10:0] k_buf_1_val_4_address1;
reg    k_buf_1_val_4_ce1;
reg    k_buf_1_val_4_we1;
reg   [7:0] k_buf_1_val_4_d1;
wire   [10:0] k_buf_1_val_5_address0;
reg    k_buf_1_val_5_ce0;
wire   [7:0] k_buf_1_val_5_q0;
wire   [10:0] k_buf_1_val_5_address1;
reg    k_buf_1_val_5_ce1;
reg    k_buf_1_val_5_we1;
reg   [7:0] k_buf_1_val_5_d1;
wire   [10:0] k_buf_2_val_3_address0;
reg    k_buf_2_val_3_ce0;
wire   [7:0] k_buf_2_val_3_q0;
wire   [10:0] k_buf_2_val_3_address1;
reg    k_buf_2_val_3_ce1;
reg    k_buf_2_val_3_we1;
wire   [10:0] k_buf_2_val_4_address0;
reg    k_buf_2_val_4_ce0;
wire   [7:0] k_buf_2_val_4_q0;
wire   [10:0] k_buf_2_val_4_address1;
reg    k_buf_2_val_4_ce1;
reg    k_buf_2_val_4_we1;
reg   [7:0] k_buf_2_val_4_d1;
wire   [10:0] k_buf_2_val_5_address0;
reg    k_buf_2_val_5_ce0;
wire   [7:0] k_buf_2_val_5_q0;
wire   [10:0] k_buf_2_val_5_address1;
reg    k_buf_2_val_5_ce1;
reg    k_buf_2_val_5_we1;
reg   [7:0] k_buf_2_val_5_d1;
reg   [1:0] phi_ln400_reg_512;
wire   [0:0] icmp_ln400_fu_551_p2;
reg   [9:0] t_V_reg_523;
wire    ap_CS_fsm_state8;
wire   [63:0] zext_ln835_fu_985_p1;
reg   [7:0] src_kernel_win_0_va_fu_170;
reg   [7:0] src_kernel_win_0_va_1_fu_174;
reg   [7:0] src_kernel_win_0_va_2_fu_178;
reg   [7:0] src_kernel_win_0_va_3_fu_182;
reg   [7:0] src_kernel_win_0_va_4_fu_186;
reg   [7:0] src_kernel_win_0_va_5_fu_190;
reg   [7:0] src_kernel_win_1_va_fu_194;
reg   [7:0] src_kernel_win_1_va_1_fu_198;
reg   [7:0] src_kernel_win_1_va_2_fu_202;
reg   [7:0] src_kernel_win_1_va_3_fu_206;
reg   [7:0] src_kernel_win_1_va_4_fu_210;
reg   [7:0] src_kernel_win_1_va_5_fu_214;
reg   [7:0] src_kernel_win_2_va_fu_218;
reg   [7:0] src_kernel_win_2_va_1_fu_222;
reg   [7:0] src_kernel_win_2_va_2_fu_226;
reg   [7:0] src_kernel_win_2_va_3_fu_230;
reg   [7:0] src_kernel_win_2_va_4_fu_234;
reg   [7:0] src_kernel_win_2_va_5_fu_238;
reg   [7:0] right_border_buf_0_s_fu_242;
wire   [7:0] col_buf_0_val_0_0_fu_1038_p3;
reg   [7:0] right_border_buf_0_1_fu_246;
reg   [7:0] right_border_buf_2_s_fu_250;
reg   [7:0] right_border_buf_0_2_fu_254;
wire   [7:0] col_buf_0_val_1_0_fu_1057_p3;
reg   [7:0] right_border_buf_0_3_fu_258;
reg   [7:0] right_border_buf_2_1_fu_262;
wire   [7:0] col_buf_2_val_2_0_fu_1400_p3;
reg   [7:0] ap_sig_allocacmp_right_border_buf_2_6;
reg   [7:0] right_border_buf_0_4_fu_266;
wire   [7:0] col_buf_0_val_2_0_fu_1076_p3;
reg   [7:0] right_border_buf_0_5_fu_270;
reg   [7:0] right_border_buf_2_2_fu_274;
reg   [7:0] right_border_buf_1_s_fu_278;
wire   [7:0] col_buf_1_val_0_0_fu_1206_p3;
reg   [7:0] right_border_buf_1_1_fu_282;
reg   [7:0] right_border_buf_2_3_fu_286;
wire   [7:0] col_buf_2_val_1_0_fu_1382_p3;
reg   [7:0] ap_sig_allocacmp_right_border_buf_2_7;
reg   [7:0] right_border_buf_1_2_fu_290;
wire   [7:0] col_buf_1_val_1_0_fu_1225_p3;
reg   [7:0] right_border_buf_1_3_fu_294;
reg   [7:0] right_border_buf_2_4_fu_298;
reg   [7:0] right_border_buf_1_4_fu_302;
wire   [7:0] col_buf_1_val_2_0_fu_1244_p3;
reg   [7:0] right_border_buf_1_5_fu_306;
reg   [7:0] right_border_buf_2_5_fu_310;
wire   [7:0] col_buf_2_val_0_0_fu_1364_p3;
reg   [7:0] ap_sig_allocacmp_right_border_buf_2_8;
reg    ap_block_pp0_stage0_01001;
wire   [8:0] tmp_fu_585_p4;
wire   [10:0] zext_ln443_fu_557_p1;
wire   [1:0] trunc_ln506_fu_619_p1;
wire   [10:0] add_ln506_fu_623_p2;
wire   [0:0] tmp_12_fu_635_p3;
wire   [0:0] icmp_ln118_fu_649_p2;
wire   [0:0] xor_ln118_1_fu_643_p2;
wire   [0:0] tmp_20_fu_661_p3;
wire   [10:0] sub_ln142_1_fu_669_p2;
wire   [10:0] select_ln139_1_fu_675_p3;
wire   [1:0] trunc_ln507_fu_683_p1;
wire   [10:0] add_ln506_1_fu_699_p2;
wire   [10:0] add_ln506_2_fu_725_p2;
wire   [0:0] icmp_ln144_1_fu_687_p2;
wire   [1:0] sub_ln507_fu_693_p2;
wire   [0:0] and_ln118_1_fu_655_p2;
wire   [1:0] add_ln507_fu_629_p2;
wire   [1:0] select_ln507_fu_751_p3;
wire   [1:0] select_ln507_1_fu_759_p3;
wire   [1:0] trunc_ln142_fu_721_p1;
wire   [0:0] tmp_28_fu_713_p3;
wire   [1:0] sub_ln118_fu_779_p2;
wire   [1:0] trunc_ln118_fu_785_p1;
wire   [0:0] tmp_27_fu_705_p3;
wire   [1:0] select_ln139_2_fu_789_p3;
wire   [1:0] xor_ln118_fu_773_p2;
wire   [1:0] select_ln118_1_fu_797_p3;
wire   [1:0] trunc_ln142_1_fu_747_p1;
wire   [0:0] tmp_30_fu_739_p3;
wire   [1:0] xor_ln118_2_fu_817_p2;
wire   [1:0] trunc_ln118_1_fu_823_p1;
wire   [0:0] tmp_29_fu_731_p3;
wire   [1:0] select_ln139_3_fu_827_p3;
wire   [1:0] add_ln118_fu_811_p2;
wire   [1:0] select_ln118_2_fu_835_p3;
wire   [9:0] tmp_31_fu_874_p4;
wire   [11:0] zext_ln444_fu_858_p1;
wire   [11:0] add_ln451_fu_890_p2;
wire   [0:0] tmp_32_fu_896_p3;
wire   [0:0] icmp_ln118_1_fu_910_p2;
wire   [0:0] xor_ln118_3_fu_904_p2;
wire   [0:0] tmp_33_fu_922_p3;
wire   [11:0] sub_ln142_fu_930_p2;
wire   [11:0] select_ln139_fu_936_p3;
wire   [0:0] icmp_ln144_fu_944_p2;
wire   [11:0] sub_ln147_fu_950_p2;
wire   [11:0] select_ln144_fu_956_p3;
wire  signed [11:0] select_ln118_fu_964_p3;
wire  signed [31:0] sext_ln118_fu_972_p1;
wire   [0:0] icmp_ln891_fu_884_p2;
wire   [1:0] xor_ln493_fu_1021_p2;
wire   [7:0] tmp_3_fu_1026_p5;
wire   [7:0] tmp_6_fu_1045_p5;
wire   [7:0] tmp_7_fu_1064_p5;
wire   [7:0] tmp_8_fu_1122_p5;
wire   [7:0] tmp_9_fu_1140_p5;
wire   [7:0] tmp_s_fu_1158_p5;
wire   [7:0] tmp_2_fu_1194_p5;
wire   [7:0] tmp_10_fu_1213_p5;
wire   [7:0] tmp_11_fu_1232_p5;
wire   [7:0] tmp_13_fu_1290_p5;
wire   [7:0] tmp_14_fu_1308_p5;
wire   [7:0] tmp_15_fu_1326_p5;
wire   [7:0] tmp_17_fu_1353_p5;
wire   [7:0] tmp_18_fu_1371_p5;
wire   [7:0] tmp_19_fu_1389_p5;
wire   [7:0] tmp_21_fu_1434_p5;
wire   [7:0] tmp_22_fu_1452_p5;
wire   [7:0] tmp_23_fu_1470_p5;
wire   [8:0] zext_ln703_fu_1501_p1;
wire   [8:0] zext_ln1118_fu_1497_p1;
wire   [8:0] sub_ln703_fu_1504_p2;
wire   [8:0] shl_ln_fu_1514_p3;
wire   [9:0] zext_ln1118_1_fu_1522_p1;
wire  signed [9:0] sub_ln1118_fu_1526_p2;
wire   [8:0] shl_ln1118_1_fu_1545_p3;
wire   [8:0] zext_ln1118_2_fu_1556_p1;
wire  signed [8:0] sub_ln1118_1_fu_1560_p2;
wire  signed [10:0] sext_ln703_1_fu_1566_p1;
wire  signed [10:0] sext_ln703_fu_1532_p1;
wire   [9:0] zext_ln703_2_fu_1574_p1;
wire  signed [9:0] sext_ln1118_fu_1510_p1;
wire   [9:0] add_ln703_1_fu_1583_p2;
wire   [10:0] zext_ln703_1_fu_1552_p1;
wire  signed [10:0] sext_ln703_2_fu_1589_p1;
wire   [10:0] add_ln703_fu_1577_p2;
wire   [10:0] add_ln703_2_fu_1593_p2;
wire   [10:0] p_Val2_s_fu_1599_p2;
wire   [7:0] trunc_ln703_fu_1541_p1;
wire   [7:0] sub_ln703_1_fu_1536_p2;
wire   [7:0] trunc_ln703_1_fu_1570_p1;
wire   [2:0] tmp_1_fu_1624_p4;
wire   [8:0] zext_ln703_3_fu_1653_p1;
wire   [8:0] zext_ln1118_3_fu_1649_p1;
wire   [8:0] sub_ln703_2_fu_1656_p2;
wire   [8:0] shl_ln1118_2_fu_1666_p3;
wire   [9:0] zext_ln1118_4_fu_1674_p1;
wire  signed [9:0] sub_ln1118_2_fu_1678_p2;
wire   [8:0] shl_ln1118_3_fu_1697_p3;
wire   [8:0] zext_ln1118_5_fu_1708_p1;
wire  signed [8:0] sub_ln1118_3_fu_1712_p2;
wire  signed [10:0] sext_ln703_4_fu_1718_p1;
wire  signed [10:0] sext_ln703_3_fu_1684_p1;
wire   [9:0] zext_ln703_5_fu_1726_p1;
wire  signed [9:0] sext_ln1118_1_fu_1662_p1;
wire   [9:0] add_ln703_9_fu_1735_p2;
wire   [10:0] zext_ln703_4_fu_1704_p1;
wire  signed [10:0] sext_ln703_5_fu_1741_p1;
wire   [10:0] add_ln703_8_fu_1729_p2;
wire   [10:0] add_ln703_10_fu_1745_p2;
wire   [10:0] p_Val2_3_fu_1751_p2;
wire   [7:0] trunc_ln703_2_fu_1693_p1;
wire   [7:0] sub_ln703_3_fu_1688_p2;
wire   [7:0] trunc_ln703_3_fu_1722_p1;
wire   [2:0] tmp_16_fu_1776_p4;
wire   [8:0] zext_ln703_6_fu_1805_p1;
wire   [8:0] zext_ln1118_6_fu_1801_p1;
wire   [8:0] sub_ln703_4_fu_1808_p2;
wire   [8:0] shl_ln1118_4_fu_1818_p3;
wire   [9:0] zext_ln1118_7_fu_1826_p1;
wire  signed [9:0] sub_ln1118_4_fu_1830_p2;
wire   [8:0] shl_ln1118_5_fu_1849_p3;
wire   [8:0] zext_ln1118_8_fu_1860_p1;
wire  signed [8:0] sub_ln1118_5_fu_1864_p2;
wire  signed [10:0] sext_ln703_7_fu_1870_p1;
wire  signed [10:0] sext_ln703_6_fu_1836_p1;
wire   [9:0] zext_ln703_8_fu_1878_p1;
wire  signed [9:0] sext_ln1118_2_fu_1814_p1;
wire   [9:0] add_ln703_17_fu_1887_p2;
wire   [10:0] zext_ln703_7_fu_1856_p1;
wire  signed [10:0] sext_ln703_8_fu_1893_p1;
wire   [10:0] add_ln703_16_fu_1881_p2;
wire   [10:0] add_ln703_18_fu_1897_p2;
wire   [10:0] p_Val2_6_fu_1903_p2;
wire   [7:0] trunc_ln703_4_fu_1845_p1;
wire   [7:0] sub_ln703_5_fu_1840_p2;
wire   [7:0] trunc_ln703_5_fu_1874_p1;
wire   [2:0] tmp_24_fu_1928_p4;
wire   [7:0] shl_ln703_fu_2052_p2;
wire   [7:0] add_ln703_6_fu_2057_p2;
wire   [0:0] xor_ln785_fu_2067_p2;
wire   [0:0] overflow_fu_2072_p2;
wire   [0:0] or_ln340_fu_2085_p2;
wire   [7:0] select_ln340_fu_2077_p3;
wire   [7:0] p_Val2_1_fu_2062_p2;
wire   [7:0] shl_ln703_1_fu_2099_p2;
wire   [7:0] add_ln703_14_fu_2104_p2;
wire   [0:0] xor_ln785_1_fu_2114_p2;
wire   [0:0] overflow_1_fu_2119_p2;
wire   [0:0] or_ln340_1_fu_2132_p2;
wire   [7:0] select_ln340_2_fu_2124_p3;
wire   [7:0] p_Val2_4_fu_2109_p2;
wire   [7:0] shl_ln703_2_fu_2146_p2;
wire   [7:0] add_ln703_22_fu_2151_p2;
wire   [0:0] xor_ln785_2_fu_2161_p2;
wire   [0:0] overflow_2_fu_2166_p2;
wire   [0:0] or_ln340_2_fu_2179_p2;
wire   [7:0] select_ln340_4_fu_2171_p3;
wire   [7:0] p_Val2_7_fu_2156_p2;
reg   [4:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_150;
reg    ap_enable_state4_pp0_iter0_stage0;
wire    ap_enable_operation_201;
reg    ap_enable_state5_pp0_iter1_stage0;
reg    ap_predicate_op216_store_state5;
reg    ap_enable_operation_216;
reg    ap_predicate_op224_store_state5;
reg    ap_enable_operation_224;
reg    ap_enable_operation_152;
wire    ap_enable_operation_205;
reg    ap_predicate_op214_store_state5;
reg    ap_enable_operation_214;
reg    ap_predicate_op222_store_state5;
reg    ap_enable_operation_222;
reg    ap_enable_operation_154;
wire    ap_enable_operation_208;
reg    ap_predicate_op212_store_state5;
reg    ap_enable_operation_212;
reg    ap_predicate_op221_store_state5;
reg    ap_enable_operation_221;
reg    ap_enable_operation_165;
wire    ap_enable_operation_244;
reg    ap_predicate_op258_store_state5;
reg    ap_enable_operation_258;
reg    ap_predicate_op266_store_state5;
reg    ap_enable_operation_266;
reg    ap_enable_operation_167;
wire    ap_enable_operation_247;
reg    ap_predicate_op256_store_state5;
reg    ap_enable_operation_256;
reg    ap_predicate_op264_store_state5;
reg    ap_enable_operation_264;
reg    ap_enable_operation_169;
wire    ap_enable_operation_250;
reg    ap_predicate_op254_store_state5;
reg    ap_enable_operation_254;
reg    ap_predicate_op263_store_state5;
reg    ap_enable_operation_263;
reg    ap_enable_operation_179;
wire    ap_enable_operation_283;
reg    ap_predicate_op297_store_state5;
reg    ap_enable_operation_297;
reg    ap_predicate_op302_store_state5;
reg    ap_enable_operation_302;
reg    ap_enable_operation_181;
wire    ap_enable_operation_286;
reg    ap_predicate_op295_store_state5;
reg    ap_enable_operation_295;
reg    ap_predicate_op300_store_state5;
reg    ap_enable_operation_300;
reg    ap_enable_operation_183;
wire    ap_enable_operation_289;
reg    ap_predicate_op293_store_state5;
reg    ap_enable_operation_293;
reg    ap_predicate_op299_store_state5;
reg    ap_enable_operation_299;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_1575;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_address1),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_0_V_dout)
);

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_address1),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_address1),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_1_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_1_val_3_address0),
    .ce0(k_buf_1_val_3_ce0),
    .q0(k_buf_1_val_3_q0),
    .address1(k_buf_1_val_3_address1),
    .ce1(k_buf_1_val_3_ce1),
    .we1(k_buf_1_val_3_we1),
    .d1(p_src_data_stream_1_V_dout)
);

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_1_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_1_val_4_address0),
    .ce0(k_buf_1_val_4_ce0),
    .q0(k_buf_1_val_4_q0),
    .address1(k_buf_1_val_4_address1),
    .ce1(k_buf_1_val_4_ce1),
    .we1(k_buf_1_val_4_we1),
    .d1(k_buf_1_val_4_d1)
);

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_1_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_1_val_5_address0),
    .ce0(k_buf_1_val_5_ce0),
    .q0(k_buf_1_val_5_q0),
    .address1(k_buf_1_val_5_address1),
    .ce1(k_buf_1_val_5_ce1),
    .we1(k_buf_1_val_5_we1),
    .d1(k_buf_1_val_5_d1)
);

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_2_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_2_val_3_address0),
    .ce0(k_buf_2_val_3_ce0),
    .q0(k_buf_2_val_3_q0),
    .address1(k_buf_2_val_3_address1),
    .ce1(k_buf_2_val_3_ce1),
    .we1(k_buf_2_val_3_we1),
    .d1(p_src_data_stream_2_V_dout)
);

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_2_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_2_val_4_address0),
    .ce0(k_buf_2_val_4_ce0),
    .q0(k_buf_2_val_4_q0),
    .address1(k_buf_2_val_4_address1),
    .ce1(k_buf_2_val_4_ce1),
    .we1(k_buf_2_val_4_we1),
    .d1(k_buf_2_val_4_d1)
);

Filter2D_k_buf_0_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_2_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_2_val_5_address0),
    .ce0(k_buf_2_val_5_ce0),
    .q0(k_buf_2_val_5_q0),
    .address1(k_buf_2_val_5_address1),
    .ce1(k_buf_2_val_5_ce1),
    .we1(k_buf_2_val_5_we1),
    .d1(k_buf_2_val_5_d1)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U32(
    .din0(right_border_buf_0_s_fu_242),
    .din1(right_border_buf_0_1_fu_246),
    .din2(8'd0),
    .din3(xor_ln493_fu_1021_p2),
    .dout(tmp_3_fu_1026_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U33(
    .din0(right_border_buf_0_2_fu_254),
    .din1(right_border_buf_0_3_fu_258),
    .din2(8'd0),
    .din3(xor_ln493_fu_1021_p2),
    .dout(tmp_6_fu_1045_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U34(
    .din0(right_border_buf_0_4_fu_266),
    .din1(right_border_buf_0_5_fu_270),
    .din2(8'd0),
    .din3(xor_ln493_fu_1021_p2),
    .dout(tmp_7_fu_1064_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U35(
    .din0(col_buf_0_val_0_0_fu_1038_p3),
    .din1(col_buf_0_val_1_0_fu_1057_p3),
    .din2(col_buf_0_val_2_0_fu_1076_p3),
    .din3(xor_ln493_1_reg_2467),
    .dout(tmp_8_fu_1122_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U36(
    .din0(col_buf_0_val_0_0_fu_1038_p3),
    .din1(col_buf_0_val_1_0_fu_1057_p3),
    .din2(col_buf_0_val_2_0_fu_1076_p3),
    .din3(xor_ln493_2_reg_2474),
    .dout(tmp_9_fu_1140_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U37(
    .din0(col_buf_0_val_0_0_fu_1038_p3),
    .din1(col_buf_0_val_1_0_fu_1057_p3),
    .din2(col_buf_0_val_2_0_fu_1076_p3),
    .din3(xor_ln493_3_reg_2481),
    .dout(tmp_s_fu_1158_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U38(
    .din0(right_border_buf_1_s_fu_278),
    .din1(right_border_buf_1_1_fu_282),
    .din2(8'd0),
    .din3(xor_ln493_fu_1021_p2),
    .dout(tmp_2_fu_1194_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U39(
    .din0(right_border_buf_1_2_fu_290),
    .din1(right_border_buf_1_3_fu_294),
    .din2(8'd0),
    .din3(xor_ln493_fu_1021_p2),
    .dout(tmp_10_fu_1213_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U40(
    .din0(right_border_buf_1_4_fu_302),
    .din1(right_border_buf_1_5_fu_306),
    .din2(8'd0),
    .din3(xor_ln493_fu_1021_p2),
    .dout(tmp_11_fu_1232_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U41(
    .din0(col_buf_1_val_0_0_fu_1206_p3),
    .din1(col_buf_1_val_1_0_fu_1225_p3),
    .din2(col_buf_1_val_2_0_fu_1244_p3),
    .din3(xor_ln493_1_reg_2467),
    .dout(tmp_13_fu_1290_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U42(
    .din0(col_buf_1_val_0_0_fu_1206_p3),
    .din1(col_buf_1_val_1_0_fu_1225_p3),
    .din2(col_buf_1_val_2_0_fu_1244_p3),
    .din3(xor_ln493_2_reg_2474),
    .dout(tmp_14_fu_1308_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U43(
    .din0(col_buf_1_val_0_0_fu_1206_p3),
    .din1(col_buf_1_val_1_0_fu_1225_p3),
    .din2(col_buf_1_val_2_0_fu_1244_p3),
    .din3(xor_ln493_3_reg_2481),
    .dout(tmp_15_fu_1326_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U44(
    .din0(right_border_buf_2_8_reg_2500),
    .din1(right_border_buf_2_4_fu_298),
    .din2(8'd0),
    .din3(xor_ln493_fu_1021_p2),
    .dout(tmp_17_fu_1353_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U45(
    .din0(right_border_buf_2_7_reg_2494),
    .din1(right_border_buf_2_2_fu_274),
    .din2(8'd0),
    .din3(xor_ln493_fu_1021_p2),
    .dout(tmp_18_fu_1371_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U46(
    .din0(right_border_buf_2_6_reg_2488),
    .din1(right_border_buf_2_s_fu_250),
    .din2(8'd0),
    .din3(xor_ln493_fu_1021_p2),
    .dout(tmp_19_fu_1389_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U47(
    .din0(col_buf_2_val_0_0_fu_1364_p3),
    .din1(col_buf_2_val_1_0_fu_1382_p3),
    .din2(col_buf_2_val_2_0_fu_1400_p3),
    .din3(xor_ln493_1_reg_2467),
    .dout(tmp_21_fu_1434_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U48(
    .din0(col_buf_2_val_0_0_fu_1364_p3),
    .din1(col_buf_2_val_1_0_fu_1382_p3),
    .din2(col_buf_2_val_2_0_fu_1400_p3),
    .din3(xor_ln493_2_reg_2474),
    .dout(tmp_22_fu_1452_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U49(
    .din0(col_buf_2_val_0_0_fu_1364_p3),
    .din1(col_buf_2_val_1_0_fu_1382_p3),
    .din2(col_buf_2_val_2_0_fu_1400_p3),
    .din3(xor_ln493_3_reg_2481),
    .dout(tmp_23_fu_1470_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state4))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln443_fu_561_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state4)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state4);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((icmp_ln443_fu_561_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        phi_ln400_reg_512 <= 2'd0;
    end else if (((icmp_ln400_fu_551_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_ln400_reg_512 <= add_ln400_fu_545_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_fu_862_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_534 <= j_V_fu_868_p2;
    end else if (((icmp_ln443_fu_561_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        t_V_2_reg_534 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln400_fu_551_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_reg_523 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        t_V_reg_523 <= i_V_reg_2427;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln512_reg_2555_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln703_12_reg_2685 <= add_ln703_12_fu_1765_p2;
        add_ln703_13_reg_2690 <= add_ln703_13_fu_1771_p2;
        add_ln703_20_reg_2706 <= add_ln703_20_fu_1917_p2;
        add_ln703_21_reg_2711 <= add_ln703_21_fu_1923_p2;
        add_ln703_4_reg_2664 <= add_ln703_4_fu_1613_p2;
        add_ln703_5_reg_2669 <= add_ln703_5_fu_1619_p2;
        icmp_ln785_1_reg_2695 <= icmp_ln785_1_fu_1786_p2;
        icmp_ln785_2_reg_2716 <= icmp_ln785_2_fu_1938_p2;
        icmp_ln785_reg_2674 <= icmp_ln785_fu_1634_p2;
        p_Result_1_reg_2679 <= p_Val2_3_fu_1751_p2[32'd10];
        p_Result_2_reg_2700 <= p_Val2_6_fu_1903_p2[32'd10];
        p_Result_s_reg_2658 <= p_Val2_s_fu_1599_p2[32'd10];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_fu_862_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln118_reg_2515 <= and_ln118_fu_916_p2;
        and_ln512_reg_2555 <= and_ln512_fu_998_p2;
        k_buf_0_val_3_addr_reg_2537 <= zext_ln835_fu_985_p1;
        k_buf_0_val_4_addr_reg_2543 <= zext_ln835_fu_985_p1;
        k_buf_0_val_5_addr_reg_2549 <= zext_ln835_fu_985_p1;
        k_buf_1_val_3_addr_reg_2559 <= zext_ln835_fu_985_p1;
        k_buf_1_val_4_addr_reg_2565 <= zext_ln835_fu_985_p1;
        k_buf_1_val_5_addr_reg_2571 <= zext_ln835_fu_985_p1;
        k_buf_2_val_3_addr_reg_2577 <= zext_ln835_fu_985_p1;
        k_buf_2_val_4_addr_reg_2583 <= zext_ln835_fu_985_p1;
        k_buf_2_val_5_addr_reg_2589 <= zext_ln835_fu_985_p1;
        or_ln457_reg_2524 <= or_ln457_fu_980_p2;
        trunc_ln458_reg_2519 <= trunc_ln458_fu_976_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln512_reg_2555_pp0_iter1_reg <= and_ln512_reg_2555;
        icmp_ln444_reg_2506 <= icmp_ln444_fu_862_p2;
        icmp_ln444_reg_2506_pp0_iter1_reg <= icmp_ln444_reg_2506;
        right_border_buf_2_6_reg_2488 <= ap_sig_allocacmp_right_border_buf_2_6;
        right_border_buf_2_7_reg_2494 <= ap_sig_allocacmp_right_border_buf_2_7;
        right_border_buf_2_8_reg_2500 <= ap_sig_allocacmp_right_border_buf_2_8;
        src_kernel_win_0_va_6_reg_2595 <= src_kernel_win_0_va_6_fu_1133_p3;
        src_kernel_win_0_va_7_reg_2602 <= src_kernel_win_0_va_7_fu_1151_p3;
        src_kernel_win_0_va_8_reg_2609 <= src_kernel_win_0_va_8_fu_1169_p3;
        src_kernel_win_1_va_6_reg_2616 <= src_kernel_win_1_va_6_fu_1301_p3;
        src_kernel_win_1_va_7_reg_2623 <= src_kernel_win_1_va_7_fu_1319_p3;
        src_kernel_win_1_va_8_reg_2630 <= src_kernel_win_1_va_8_fu_1337_p3;
        src_kernel_win_2_va_10_reg_2644 <= src_kernel_win_2_va_10_fu_1463_p3;
        src_kernel_win_2_va_11_reg_2651 <= src_kernel_win_2_va_11_fu_1481_p3;
        src_kernel_win_2_va_9_reg_2637 <= src_kernel_win_2_va_9_fu_1445_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln512_reg_2555_pp0_iter2_reg <= and_ln512_reg_2555_pp0_iter1_reg;
        src_kernel_win_0_va_7_reg_2602_pp0_iter2_reg <= src_kernel_win_0_va_7_reg_2602;
        src_kernel_win_1_va_7_reg_2623_pp0_iter2_reg <= src_kernel_win_1_va_7_reg_2623;
        src_kernel_win_2_va_10_reg_2644_pp0_iter2_reg <= src_kernel_win_2_va_10_reg_2644;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_V_reg_2427 <= i_V_fu_567_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln443_fu_561_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        icmp_ln879_1_reg_2450 <= icmp_ln879_1_fu_607_p2;
        icmp_ln879_reg_2446 <= icmp_ln879_fu_601_p2;
        icmp_ln887_reg_2432 <= icmp_ln887_fu_573_p2;
        icmp_ln899_1_reg_2454 <= icmp_ln899_1_fu_613_p2;
        icmp_ln899_reg_2441 <= icmp_ln899_fu_595_p2;
        xor_ln457_reg_2436 <= xor_ln457_fu_579_p2;
        xor_ln493_1_reg_2467 <= xor_ln493_1_fu_767_p2;
        xor_ln493_2_reg_2474 <= xor_ln493_2_fu_805_p2;
        xor_ln493_3_reg_2481 <= xor_ln493_3_fu_843_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_1_fu_246 <= right_border_buf_0_s_fu_242;
        right_border_buf_0_2_fu_254 <= col_buf_0_val_1_0_fu_1057_p3;
        right_border_buf_0_3_fu_258 <= right_border_buf_0_2_fu_254;
        right_border_buf_0_4_fu_266 <= col_buf_0_val_2_0_fu_1076_p3;
        right_border_buf_0_5_fu_270 <= right_border_buf_0_4_fu_266;
        right_border_buf_0_s_fu_242 <= col_buf_0_val_0_0_fu_1038_p3;
        right_border_buf_1_1_fu_282 <= right_border_buf_1_s_fu_278;
        right_border_buf_1_2_fu_290 <= col_buf_1_val_1_0_fu_1225_p3;
        right_border_buf_1_3_fu_294 <= right_border_buf_1_2_fu_290;
        right_border_buf_1_4_fu_302 <= col_buf_1_val_2_0_fu_1244_p3;
        right_border_buf_1_5_fu_306 <= right_border_buf_1_4_fu_302;
        right_border_buf_1_s_fu_278 <= col_buf_1_val_0_0_fu_1206_p3;
        right_border_buf_2_1_fu_262 <= col_buf_2_val_2_0_fu_1400_p3;
        right_border_buf_2_2_fu_274 <= right_border_buf_2_7_reg_2494;
        right_border_buf_2_3_fu_286 <= col_buf_2_val_1_0_fu_1382_p3;
        right_border_buf_2_4_fu_298 <= right_border_buf_2_8_reg_2500;
        right_border_buf_2_5_fu_310 <= col_buf_2_val_0_0_fu_1364_p3;
        right_border_buf_2_s_fu_250 <= right_border_buf_2_6_reg_2488;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_reg_2506_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_174 <= src_kernel_win_0_va_fu_170;
        src_kernel_win_0_va_2_fu_178 <= src_kernel_win_0_va_7_reg_2602;
        src_kernel_win_0_va_3_fu_182 <= src_kernel_win_0_va_2_fu_178;
        src_kernel_win_0_va_4_fu_186 <= src_kernel_win_0_va_8_reg_2609;
        src_kernel_win_0_va_5_fu_190 <= src_kernel_win_0_va_4_fu_186;
        src_kernel_win_0_va_fu_170 <= src_kernel_win_0_va_6_reg_2595;
        src_kernel_win_1_va_1_fu_198 <= src_kernel_win_1_va_fu_194;
        src_kernel_win_1_va_2_fu_202 <= src_kernel_win_1_va_7_reg_2623;
        src_kernel_win_1_va_3_fu_206 <= src_kernel_win_1_va_2_fu_202;
        src_kernel_win_1_va_4_fu_210 <= src_kernel_win_1_va_8_reg_2630;
        src_kernel_win_1_va_5_fu_214 <= src_kernel_win_1_va_4_fu_210;
        src_kernel_win_1_va_fu_194 <= src_kernel_win_1_va_6_reg_2616;
        src_kernel_win_2_va_1_fu_222 <= src_kernel_win_2_va_fu_218;
        src_kernel_win_2_va_2_fu_226 <= src_kernel_win_2_va_10_reg_2644;
        src_kernel_win_2_va_3_fu_230 <= src_kernel_win_2_va_2_fu_226;
        src_kernel_win_2_va_4_fu_234 <= src_kernel_win_2_va_11_reg_2651;
        src_kernel_win_2_va_5_fu_238 <= src_kernel_win_2_va_4_fu_234;
        src_kernel_win_2_va_fu_218 <= src_kernel_win_2_va_9_reg_2637;
    end
end

always @ (*) begin
    if ((icmp_ln444_fu_862_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln443_fu_561_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln443_fu_561_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_right_border_buf_2_6 = col_buf_2_val_2_0_fu_1400_p3;
    end else begin
        ap_sig_allocacmp_right_border_buf_2_6 = right_border_buf_2_1_fu_262;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_right_border_buf_2_7 = col_buf_2_val_1_0_fu_1382_p3;
    end else begin
        ap_sig_allocacmp_right_border_buf_2_7 = right_border_buf_2_3_fu_286;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_right_border_buf_2_8 = col_buf_2_val_0_0_fu_1364_p3;
    end else begin
        ap_sig_allocacmp_right_border_buf_2_8 = right_border_buf_2_5_fu_310;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_reg_2446 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_reg_2446 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_1_reg_2450 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1575)) begin
        if (((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1))) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if (((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_1_reg_2450 == 1'd1))) begin
            k_buf_0_val_4_d1 = p_src_data_stream_0_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_1_reg_2450 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_reg_2446 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1575)) begin
        if (((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1))) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if (((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_reg_2446 == 1'd1))) begin
            k_buf_0_val_5_d1 = p_src_data_stream_0_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_reg_2446 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_1_val_3_ce0 = 1'b1;
    end else begin
        k_buf_1_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_reg_2446 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_1_val_3_ce1 = 1'b1;
    end else begin
        k_buf_1_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_reg_2446 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_1_val_3_we1 = 1'b1;
    end else begin
        k_buf_1_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_1_val_4_ce0 = 1'b1;
    end else begin
        k_buf_1_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_1_reg_2450 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_1_val_4_ce1 = 1'b1;
    end else begin
        k_buf_1_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1575)) begin
        if (((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1))) begin
            k_buf_1_val_4_d1 = k_buf_1_val_3_q0;
        end else if (((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_1_reg_2450 == 1'd1))) begin
            k_buf_1_val_4_d1 = p_src_data_stream_1_V_dout;
        end else begin
            k_buf_1_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_1_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_1_reg_2450 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_1_val_4_we1 = 1'b1;
    end else begin
        k_buf_1_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_1_val_5_ce0 = 1'b1;
    end else begin
        k_buf_1_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_reg_2446 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_1_val_5_ce1 = 1'b1;
    end else begin
        k_buf_1_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1575)) begin
        if (((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1))) begin
            k_buf_1_val_5_d1 = k_buf_1_val_4_q0;
        end else if (((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_reg_2446 == 1'd1))) begin
            k_buf_1_val_5_d1 = p_src_data_stream_1_V_dout;
        end else begin
            k_buf_1_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_1_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_reg_2446 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_1_val_5_we1 = 1'b1;
    end else begin
        k_buf_1_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_2_val_3_ce0 = 1'b1;
    end else begin
        k_buf_2_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_reg_2446 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_2_val_3_ce1 = 1'b1;
    end else begin
        k_buf_2_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_reg_2446 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_2_val_3_we1 = 1'b1;
    end else begin
        k_buf_2_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_2_val_4_ce0 = 1'b1;
    end else begin
        k_buf_2_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_1_reg_2450 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_2_val_4_ce1 = 1'b1;
    end else begin
        k_buf_2_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1575)) begin
        if (((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1))) begin
            k_buf_2_val_4_d1 = k_buf_2_val_3_q0;
        end else if (((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_1_reg_2450 == 1'd1))) begin
            k_buf_2_val_4_d1 = p_src_data_stream_2_V_dout;
        end else begin
            k_buf_2_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_2_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_1_reg_2450 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_2_val_4_we1 = 1'b1;
    end else begin
        k_buf_2_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_2_val_5_ce0 = 1'b1;
    end else begin
        k_buf_2_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_reg_2446 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_2_val_5_ce1 = 1'b1;
    end else begin
        k_buf_2_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1575)) begin
        if (((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1))) begin
            k_buf_2_val_5_d1 = k_buf_2_val_4_q0;
        end else if (((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_reg_2446 == 1'd1))) begin
            k_buf_2_val_5_d1 = p_src_data_stream_2_V_dout;
        end else begin
            k_buf_2_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_2_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_reg_2446 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_2_val_5_we1 = 1'b1;
    end else begin
        k_buf_2_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln512_reg_2555_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        p_dst_data_stream_0_V_blk_n = p_dst_data_stream_0_V_full_n;
    end else begin
        p_dst_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln512_reg_2555_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_0_V_write = 1'b1;
    end else begin
        p_dst_data_stream_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln512_reg_2555_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        p_dst_data_stream_1_V_blk_n = p_dst_data_stream_1_V_full_n;
    end else begin
        p_dst_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln512_reg_2555_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_1_V_write = 1'b1;
    end else begin
        p_dst_data_stream_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln512_reg_2555_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        p_dst_data_stream_2_V_blk_n = p_dst_data_stream_2_V_full_n;
    end else begin
        p_dst_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln512_reg_2555_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_2_V_write = 1'b1;
    end else begin
        p_dst_data_stream_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln899_reg_2441 == 1'd0) & (1'd1 == and_ln118_reg_2515) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_data_stream_0_V_blk_n = p_src_data_stream_0_V_empty_n;
    end else begin
        p_src_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op223_read_state5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op211_read_state5 == 1'b1)))) begin
        p_src_data_stream_0_V_read = 1'b1;
    end else begin
        p_src_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln899_reg_2441 == 1'd0) & (1'd1 == and_ln118_reg_2515) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_data_stream_1_V_blk_n = p_src_data_stream_1_V_empty_n;
    end else begin
        p_src_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op265_read_state5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op253_read_state5 == 1'b1)))) begin
        p_src_data_stream_1_V_read = 1'b1;
    end else begin
        p_src_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln899_reg_2441 == 1'd0) & (1'd1 == and_ln118_reg_2515) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_data_stream_2_V_blk_n = p_src_data_stream_2_V_empty_n;
    end else begin
        p_src_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op301_read_state5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op292_read_state5 == 1'b1)))) begin
        p_src_data_stream_2_V_read = 1'b1;
    end else begin
        p_src_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln400_fu_551_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln443_fu_561_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln444_fu_862_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln444_fu_862_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln118_fu_811_p2 = (2'd1 + trunc_ln506_fu_619_p1);

assign add_ln400_fu_545_p2 = (phi_ln400_reg_512 + 2'd1);

assign add_ln451_fu_890_p2 = ($signed(12'd4095) + $signed(zext_ln444_fu_858_p1));

assign add_ln506_1_fu_699_p2 = ($signed(11'd2046) + $signed(zext_ln443_fu_557_p1));

assign add_ln506_2_fu_725_p2 = ($signed(11'd2045) + $signed(zext_ln443_fu_557_p1));

assign add_ln506_fu_623_p2 = ($signed(11'd2047) + $signed(zext_ln443_fu_557_p1));

assign add_ln507_fu_629_p2 = ($signed(2'd3) + $signed(trunc_ln506_fu_619_p1));

assign add_ln703_10_fu_1745_p2 = ($signed(zext_ln703_4_fu_1704_p1) + $signed(sext_ln703_5_fu_1741_p1));

assign add_ln703_12_fu_1765_p2 = (trunc_ln703_2_fu_1693_p1 + sub_ln703_3_fu_1688_p2);

assign add_ln703_13_fu_1771_p2 = (src_kernel_win_1_va_6_reg_2616 + trunc_ln703_3_fu_1722_p1);

assign add_ln703_14_fu_2104_p2 = (shl_ln703_1_fu_2099_p2 + add_ln703_13_reg_2690);

assign add_ln703_16_fu_1881_p2 = ($signed(sext_ln703_7_fu_1870_p1) + $signed(sext_ln703_6_fu_1836_p1));

assign add_ln703_17_fu_1887_p2 = ($signed(zext_ln703_8_fu_1878_p1) + $signed(sext_ln1118_2_fu_1814_p1));

assign add_ln703_18_fu_1897_p2 = ($signed(zext_ln703_7_fu_1856_p1) + $signed(sext_ln703_8_fu_1893_p1));

assign add_ln703_1_fu_1583_p2 = ($signed(zext_ln703_2_fu_1574_p1) + $signed(sext_ln1118_fu_1510_p1));

assign add_ln703_20_fu_1917_p2 = (trunc_ln703_4_fu_1845_p1 + sub_ln703_5_fu_1840_p2);

assign add_ln703_21_fu_1923_p2 = (src_kernel_win_2_va_9_reg_2637 + trunc_ln703_5_fu_1874_p1);

assign add_ln703_22_fu_2151_p2 = (shl_ln703_2_fu_2146_p2 + add_ln703_21_reg_2711);

assign add_ln703_2_fu_1593_p2 = ($signed(zext_ln703_1_fu_1552_p1) + $signed(sext_ln703_2_fu_1589_p1));

assign add_ln703_4_fu_1613_p2 = (trunc_ln703_fu_1541_p1 + sub_ln703_1_fu_1536_p2);

assign add_ln703_5_fu_1619_p2 = (src_kernel_win_0_va_6_reg_2595 + trunc_ln703_1_fu_1570_p1);

assign add_ln703_6_fu_2057_p2 = (shl_ln703_fu_2052_p2 + add_ln703_5_reg_2669);

assign add_ln703_8_fu_1729_p2 = ($signed(sext_ln703_4_fu_1718_p1) + $signed(sext_ln703_3_fu_1684_p1));

assign add_ln703_9_fu_1735_p2 = ($signed(zext_ln703_5_fu_1726_p1) + $signed(sext_ln1118_1_fu_1662_p1));

assign add_ln703_fu_1577_p2 = ($signed(sext_ln703_1_fu_1566_p1) + $signed(sext_ln703_fu_1532_p1));

assign and_ln118_1_fu_655_p2 = (xor_ln118_1_fu_643_p2 & icmp_ln118_fu_649_p2);

assign and_ln118_fu_916_p2 = (xor_ln118_3_fu_904_p2 & icmp_ln118_1_fu_910_p2);

assign and_ln512_fu_998_p2 = (icmp_ln899_reg_2441 & icmp_ln891_fu_884_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (((1'd1 == and_ln512_reg_2555_pp0_iter2_reg) & (p_dst_data_stream_2_V_full_n == 1'b0)) | ((1'd1 == and_ln512_reg_2555_pp0_iter2_reg) & (p_dst_data_stream_1_V_full_n == 1'b0)) | ((1'd1 == and_ln512_reg_2555_pp0_iter2_reg) & (p_dst_data_stream_0_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op301_read_state5 == 1'b1)) | ((p_src_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op292_read_state5 == 1'b1)) | ((p_src_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op265_read_state5 == 1'b1)) | ((p_src_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op253_read_state5 == 1'b1)) | ((p_src_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op223_read_state5 == 1'b1)) | ((p_src_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op211_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (((1'd1 == and_ln512_reg_2555_pp0_iter2_reg) & (p_dst_data_stream_2_V_full_n == 1'b0)) | ((1'd1 == and_ln512_reg_2555_pp0_iter2_reg) & (p_dst_data_stream_1_V_full_n == 1'b0)) | ((1'd1 == and_ln512_reg_2555_pp0_iter2_reg) & (p_dst_data_stream_0_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op301_read_state5 == 1'b1)) | ((p_src_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op292_read_state5 == 1'b1)) | ((p_src_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op265_read_state5 == 1'b1)) | ((p_src_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op253_read_state5 == 1'b1)) | ((p_src_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op223_read_state5 == 1'b1)) | ((p_src_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op211_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (((1'd1 == and_ln512_reg_2555_pp0_iter2_reg) & (p_dst_data_stream_2_V_full_n == 1'b0)) | ((1'd1 == and_ln512_reg_2555_pp0_iter2_reg) & (p_dst_data_stream_1_V_full_n == 1'b0)) | ((1'd1 == and_ln512_reg_2555_pp0_iter2_reg) & (p_dst_data_stream_0_V_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op301_read_state5 == 1'b1)) | ((p_src_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op292_read_state5 == 1'b1)) | ((p_src_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op265_read_state5 == 1'b1)) | ((p_src_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op253_read_state5 == 1'b1)) | ((p_src_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op223_read_state5 == 1'b1)) | ((p_src_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op211_read_state5 == 1'b1)))));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = (((p_src_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op301_read_state5 == 1'b1)) | ((p_src_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op292_read_state5 == 1'b1)) | ((p_src_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op265_read_state5 == 1'b1)) | ((p_src_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op253_read_state5 == 1'b1)) | ((p_src_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op223_read_state5 == 1'b1)) | ((p_src_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op211_read_state5 == 1'b1)));
end

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter3 = (((1'd1 == and_ln512_reg_2555_pp0_iter2_reg) & (p_dst_data_stream_2_V_full_n == 1'b0)) | ((1'd1 == and_ln512_reg_2555_pp0_iter2_reg) & (p_dst_data_stream_1_V_full_n == 1'b0)) | ((1'd1 == and_ln512_reg_2555_pp0_iter2_reg) & (p_dst_data_stream_0_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_1575 = ((1'd1 == and_ln118_reg_2515) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_operation_150 = (icmp_ln444_fu_862_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_152 = (icmp_ln444_fu_862_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_154 = (icmp_ln444_fu_862_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_165 = (icmp_ln444_fu_862_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_167 = (icmp_ln444_fu_862_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_169 = (icmp_ln444_fu_862_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_179 = (icmp_ln444_fu_862_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_181 = (icmp_ln444_fu_862_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_183 = (icmp_ln444_fu_862_p2 == 1'd0);
end

assign ap_enable_operation_201 = (1'b1 == 1'b1);

assign ap_enable_operation_205 = (1'b1 == 1'b1);

assign ap_enable_operation_208 = (1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_212 = (ap_predicate_op212_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_214 = (ap_predicate_op214_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_216 = (ap_predicate_op216_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_221 = (ap_predicate_op221_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_222 = (ap_predicate_op222_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_224 = (ap_predicate_op224_store_state5 == 1'b1);
end

assign ap_enable_operation_244 = (1'b1 == 1'b1);

assign ap_enable_operation_247 = (1'b1 == 1'b1);

assign ap_enable_operation_250 = (1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_254 = (ap_predicate_op254_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_256 = (ap_predicate_op256_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_258 = (ap_predicate_op258_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_263 = (ap_predicate_op263_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_264 = (ap_predicate_op264_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_266 = (ap_predicate_op266_store_state5 == 1'b1);
end

assign ap_enable_operation_283 = (1'b1 == 1'b1);

assign ap_enable_operation_286 = (1'b1 == 1'b1);

assign ap_enable_operation_289 = (1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_293 = (ap_predicate_op293_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_295 = (ap_predicate_op295_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_297 = (ap_predicate_op297_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_299 = (ap_predicate_op299_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_300 = (ap_predicate_op300_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_302 = (ap_predicate_op302_store_state5 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state4_pp0_iter0_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_enable_state5_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op211_read_state5 = ((icmp_ln899_reg_2441 == 1'd0) & (1'd1 == and_ln118_reg_2515));
end

always @ (*) begin
    ap_predicate_op212_store_state5 = ((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_reg_2446 == 1'd1) & (1'd1 == and_ln118_reg_2515));
end

always @ (*) begin
    ap_predicate_op214_store_state5 = ((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_1_reg_2450 == 1'd1) & (1'd1 == and_ln118_reg_2515));
end

always @ (*) begin
    ap_predicate_op216_store_state5 = ((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_reg_2446 == 1'd1) & (1'd1 == and_ln118_reg_2515));
end

always @ (*) begin
    ap_predicate_op221_store_state5 = ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515));
end

always @ (*) begin
    ap_predicate_op222_store_state5 = ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515));
end

always @ (*) begin
    ap_predicate_op223_read_state5 = ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515));
end

always @ (*) begin
    ap_predicate_op224_store_state5 = ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515));
end

always @ (*) begin
    ap_predicate_op253_read_state5 = ((icmp_ln899_reg_2441 == 1'd0) & (1'd1 == and_ln118_reg_2515));
end

always @ (*) begin
    ap_predicate_op254_store_state5 = ((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_reg_2446 == 1'd1) & (1'd1 == and_ln118_reg_2515));
end

always @ (*) begin
    ap_predicate_op256_store_state5 = ((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_1_reg_2450 == 1'd1) & (1'd1 == and_ln118_reg_2515));
end

always @ (*) begin
    ap_predicate_op258_store_state5 = ((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_reg_2446 == 1'd1) & (1'd1 == and_ln118_reg_2515));
end

always @ (*) begin
    ap_predicate_op263_store_state5 = ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515));
end

always @ (*) begin
    ap_predicate_op264_store_state5 = ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515));
end

always @ (*) begin
    ap_predicate_op265_read_state5 = ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515));
end

always @ (*) begin
    ap_predicate_op266_store_state5 = ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515));
end

always @ (*) begin
    ap_predicate_op292_read_state5 = ((icmp_ln899_reg_2441 == 1'd0) & (1'd1 == and_ln118_reg_2515));
end

always @ (*) begin
    ap_predicate_op293_store_state5 = ((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_reg_2446 == 1'd1) & (1'd1 == and_ln118_reg_2515));
end

always @ (*) begin
    ap_predicate_op295_store_state5 = ((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_1_reg_2450 == 1'd1) & (1'd1 == and_ln118_reg_2515));
end

always @ (*) begin
    ap_predicate_op297_store_state5 = ((icmp_ln899_reg_2441 == 1'd0) & (icmp_ln879_reg_2446 == 1'd1) & (1'd1 == and_ln118_reg_2515));
end

always @ (*) begin
    ap_predicate_op299_store_state5 = ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515));
end

always @ (*) begin
    ap_predicate_op300_store_state5 = ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515));
end

always @ (*) begin
    ap_predicate_op301_read_state5 = ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515));
end

always @ (*) begin
    ap_predicate_op302_store_state5 = ((icmp_ln887_reg_2432 == 1'd1) & (icmp_ln899_reg_2441 == 1'd1) & (1'd1 == and_ln118_reg_2515));
end

assign col_buf_0_val_0_0_fu_1038_p3 = ((or_ln457_reg_2524[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_3_fu_1026_p5);

assign col_buf_0_val_1_0_fu_1057_p3 = ((or_ln457_reg_2524[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_6_fu_1045_p5);

assign col_buf_0_val_2_0_fu_1076_p3 = ((or_ln457_reg_2524[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_7_fu_1064_p5);

assign col_buf_1_val_0_0_fu_1206_p3 = ((or_ln457_reg_2524[0:0] === 1'b1) ? k_buf_1_val_3_q0 : tmp_2_fu_1194_p5);

assign col_buf_1_val_1_0_fu_1225_p3 = ((or_ln457_reg_2524[0:0] === 1'b1) ? k_buf_1_val_4_q0 : tmp_10_fu_1213_p5);

assign col_buf_1_val_2_0_fu_1244_p3 = ((or_ln457_reg_2524[0:0] === 1'b1) ? k_buf_1_val_5_q0 : tmp_11_fu_1232_p5);

assign col_buf_2_val_0_0_fu_1364_p3 = ((or_ln457_reg_2524[0:0] === 1'b1) ? k_buf_2_val_3_q0 : tmp_17_fu_1353_p5);

assign col_buf_2_val_1_0_fu_1382_p3 = ((or_ln457_reg_2524[0:0] === 1'b1) ? k_buf_2_val_4_q0 : tmp_18_fu_1371_p5);

assign col_buf_2_val_2_0_fu_1400_p3 = ((or_ln457_reg_2524[0:0] === 1'b1) ? k_buf_2_val_5_q0 : tmp_19_fu_1389_p5);

assign i_V_fu_567_p2 = (t_V_reg_523 + 10'd1);

assign icmp_ln118_1_fu_910_p2 = (($signed(add_ln451_fu_890_p2) < $signed(12'd1280)) ? 1'b1 : 1'b0);

assign icmp_ln118_fu_649_p2 = (($signed(add_ln506_fu_623_p2) < $signed(11'd720)) ? 1'b1 : 1'b0);

assign icmp_ln144_1_fu_687_p2 = (($signed(select_ln139_1_fu_675_p3) < $signed(11'd720)) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_944_p2 = (($signed(select_ln139_fu_936_p3) < $signed(12'd1280)) ? 1'b1 : 1'b0);

assign icmp_ln400_fu_551_p2 = ((phi_ln400_reg_512 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln443_fu_561_p2 = ((t_V_reg_523 == 10'd722) ? 1'b1 : 1'b0);

assign icmp_ln444_fu_862_p2 = ((t_V_2_reg_534 == 11'd1282) ? 1'b1 : 1'b0);

assign icmp_ln785_1_fu_1786_p2 = ((tmp_16_fu_1776_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_2_fu_1938_p2 = ((tmp_24_fu_1928_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_fu_1634_p2 = ((tmp_1_fu_1624_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_1_fu_607_p2 = ((t_V_reg_523 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_601_p2 = ((t_V_reg_523 == 10'd1) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_573_p2 = ((t_V_reg_523 < 10'd720) ? 1'b1 : 1'b0);

assign icmp_ln891_fu_884_p2 = ((tmp_31_fu_874_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln899_1_fu_613_p2 = ((t_V_reg_523 > 10'd720) ? 1'b1 : 1'b0);

assign icmp_ln899_fu_595_p2 = ((tmp_fu_585_p4 != 9'd0) ? 1'b1 : 1'b0);

assign j_V_fu_868_p2 = (t_V_2_reg_534 + 11'd1);

assign k_buf_0_val_3_address0 = zext_ln835_fu_985_p1;

assign k_buf_0_val_3_address1 = k_buf_0_val_3_addr_reg_2537;

assign k_buf_0_val_4_address0 = zext_ln835_fu_985_p1;

assign k_buf_0_val_4_address1 = k_buf_0_val_4_addr_reg_2543;

assign k_buf_0_val_5_address0 = zext_ln835_fu_985_p1;

assign k_buf_0_val_5_address1 = k_buf_0_val_5_addr_reg_2549;

assign k_buf_1_val_3_address0 = zext_ln835_fu_985_p1;

assign k_buf_1_val_3_address1 = k_buf_1_val_3_addr_reg_2559;

assign k_buf_1_val_4_address0 = zext_ln835_fu_985_p1;

assign k_buf_1_val_4_address1 = k_buf_1_val_4_addr_reg_2565;

assign k_buf_1_val_5_address0 = zext_ln835_fu_985_p1;

assign k_buf_1_val_5_address1 = k_buf_1_val_5_addr_reg_2571;

assign k_buf_2_val_3_address0 = zext_ln835_fu_985_p1;

assign k_buf_2_val_3_address1 = k_buf_2_val_3_addr_reg_2577;

assign k_buf_2_val_4_address0 = zext_ln835_fu_985_p1;

assign k_buf_2_val_4_address1 = k_buf_2_val_4_addr_reg_2583;

assign k_buf_2_val_5_address0 = zext_ln835_fu_985_p1;

assign k_buf_2_val_5_address1 = k_buf_2_val_5_addr_reg_2589;

assign or_ln340_1_fu_2132_p2 = (p_Result_1_reg_2679 | overflow_1_fu_2119_p2);

assign or_ln340_2_fu_2179_p2 = (p_Result_2_reg_2700 | overflow_2_fu_2166_p2);

assign or_ln340_fu_2085_p2 = (p_Result_s_reg_2658 | overflow_fu_2072_p2);

assign or_ln457_fu_980_p2 = (xor_ln457_reg_2436 | icmp_ln118_1_fu_910_p2);

assign overflow_1_fu_2119_p2 = (xor_ln785_1_fu_2114_p2 & icmp_ln785_1_reg_2695);

assign overflow_2_fu_2166_p2 = (xor_ln785_2_fu_2161_p2 & icmp_ln785_2_reg_2716);

assign overflow_fu_2072_p2 = (xor_ln785_fu_2067_p2 & icmp_ln785_reg_2674);

assign p_Val2_1_fu_2062_p2 = (add_ln703_4_reg_2664 + add_ln703_6_fu_2057_p2);

assign p_Val2_3_fu_1751_p2 = (add_ln703_8_fu_1729_p2 + add_ln703_10_fu_1745_p2);

assign p_Val2_4_fu_2109_p2 = (add_ln703_12_reg_2685 + add_ln703_14_fu_2104_p2);

assign p_Val2_6_fu_1903_p2 = (add_ln703_16_fu_1881_p2 + add_ln703_18_fu_1897_p2);

assign p_Val2_7_fu_2156_p2 = (add_ln703_20_reg_2706 + add_ln703_22_fu_2151_p2);

assign p_Val2_s_fu_1599_p2 = (add_ln703_fu_1577_p2 + add_ln703_2_fu_1593_p2);

assign p_dst_data_stream_0_V_din = ((or_ln340_fu_2085_p2[0:0] === 1'b1) ? select_ln340_fu_2077_p3 : p_Val2_1_fu_2062_p2);

assign p_dst_data_stream_1_V_din = ((or_ln340_1_fu_2132_p2[0:0] === 1'b1) ? select_ln340_2_fu_2124_p3 : p_Val2_4_fu_2109_p2);

assign p_dst_data_stream_2_V_din = ((or_ln340_2_fu_2179_p2[0:0] === 1'b1) ? select_ln340_4_fu_2171_p3 : p_Val2_7_fu_2156_p2);

assign select_ln118_1_fu_797_p3 = ((tmp_27_fu_705_p3[0:0] === 1'b1) ? select_ln139_2_fu_789_p3 : xor_ln118_fu_773_p2);

assign select_ln118_2_fu_835_p3 = ((tmp_29_fu_731_p3[0:0] === 1'b1) ? select_ln139_3_fu_827_p3 : add_ln118_fu_811_p2);

assign select_ln118_fu_964_p3 = ((and_ln118_fu_916_p2[0:0] === 1'b1) ? add_ln451_fu_890_p2 : select_ln144_fu_956_p3);

assign select_ln139_1_fu_675_p3 = ((tmp_20_fu_661_p3[0:0] === 1'b1) ? sub_ln142_1_fu_669_p2 : add_ln506_fu_623_p2);

assign select_ln139_2_fu_789_p3 = ((tmp_28_fu_713_p3[0:0] === 1'b1) ? sub_ln118_fu_779_p2 : trunc_ln118_fu_785_p1);

assign select_ln139_3_fu_827_p3 = ((tmp_30_fu_739_p3[0:0] === 1'b1) ? xor_ln118_2_fu_817_p2 : trunc_ln118_1_fu_823_p1);

assign select_ln139_fu_936_p3 = ((tmp_33_fu_922_p3[0:0] === 1'b1) ? sub_ln142_fu_930_p2 : add_ln451_fu_890_p2);

assign select_ln144_fu_956_p3 = ((icmp_ln144_fu_944_p2[0:0] === 1'b1) ? select_ln139_fu_936_p3 : sub_ln147_fu_950_p2);

assign select_ln340_2_fu_2124_p3 = ((xor_ln785_1_fu_2114_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln340_4_fu_2171_p3 = ((xor_ln785_2_fu_2161_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln340_fu_2077_p3 = ((xor_ln785_fu_2067_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln507_1_fu_759_p3 = ((and_ln118_1_fu_655_p2[0:0] === 1'b1) ? add_ln507_fu_629_p2 : select_ln507_fu_751_p3);

assign select_ln507_fu_751_p3 = ((icmp_ln144_1_fu_687_p2[0:0] === 1'b1) ? trunc_ln507_fu_683_p1 : sub_ln507_fu_693_p2);

assign sext_ln1118_1_fu_1662_p1 = $signed(sub_ln703_2_fu_1656_p2);

assign sext_ln1118_2_fu_1814_p1 = $signed(sub_ln703_4_fu_1808_p2);

assign sext_ln1118_fu_1510_p1 = $signed(sub_ln703_fu_1504_p2);

assign sext_ln118_fu_972_p1 = select_ln118_fu_964_p3;

assign sext_ln703_1_fu_1566_p1 = sub_ln1118_1_fu_1560_p2;

assign sext_ln703_2_fu_1589_p1 = $signed(add_ln703_1_fu_1583_p2);

assign sext_ln703_3_fu_1684_p1 = sub_ln1118_2_fu_1678_p2;

assign sext_ln703_4_fu_1718_p1 = sub_ln1118_3_fu_1712_p2;

assign sext_ln703_5_fu_1741_p1 = $signed(add_ln703_9_fu_1735_p2);

assign sext_ln703_6_fu_1836_p1 = sub_ln1118_4_fu_1830_p2;

assign sext_ln703_7_fu_1870_p1 = sub_ln1118_5_fu_1864_p2;

assign sext_ln703_8_fu_1893_p1 = $signed(add_ln703_17_fu_1887_p2);

assign sext_ln703_fu_1532_p1 = sub_ln1118_fu_1526_p2;

assign shl_ln1118_1_fu_1545_p3 = {{src_kernel_win_0_va_7_reg_2602}, {1'd0}};

assign shl_ln1118_2_fu_1666_p3 = {{src_kernel_win_1_va_3_fu_206}, {1'd0}};

assign shl_ln1118_3_fu_1697_p3 = {{src_kernel_win_1_va_7_reg_2623}, {1'd0}};

assign shl_ln1118_4_fu_1818_p3 = {{src_kernel_win_2_va_3_fu_230}, {1'd0}};

assign shl_ln1118_5_fu_1849_p3 = {{src_kernel_win_2_va_10_reg_2644}, {1'd0}};

assign shl_ln703_1_fu_2099_p2 = src_kernel_win_1_va_7_reg_2623_pp0_iter2_reg << 8'd1;

assign shl_ln703_2_fu_2146_p2 = src_kernel_win_2_va_10_reg_2644_pp0_iter2_reg << 8'd1;

assign shl_ln703_fu_2052_p2 = src_kernel_win_0_va_7_reg_2602_pp0_iter2_reg << 8'd1;

assign shl_ln_fu_1514_p3 = {{src_kernel_win_0_va_3_fu_182}, {1'd0}};

assign src_kernel_win_0_va_6_fu_1133_p3 = ((icmp_ln899_1_reg_2454[0:0] === 1'b1) ? tmp_8_fu_1122_p5 : col_buf_0_val_0_0_fu_1038_p3);

assign src_kernel_win_0_va_7_fu_1151_p3 = ((icmp_ln899_1_reg_2454[0:0] === 1'b1) ? tmp_9_fu_1140_p5 : col_buf_0_val_1_0_fu_1057_p3);

assign src_kernel_win_0_va_8_fu_1169_p3 = ((icmp_ln899_1_reg_2454[0:0] === 1'b1) ? tmp_s_fu_1158_p5 : col_buf_0_val_2_0_fu_1076_p3);

assign src_kernel_win_1_va_6_fu_1301_p3 = ((icmp_ln899_1_reg_2454[0:0] === 1'b1) ? tmp_13_fu_1290_p5 : col_buf_1_val_0_0_fu_1206_p3);

assign src_kernel_win_1_va_7_fu_1319_p3 = ((icmp_ln899_1_reg_2454[0:0] === 1'b1) ? tmp_14_fu_1308_p5 : col_buf_1_val_1_0_fu_1225_p3);

assign src_kernel_win_1_va_8_fu_1337_p3 = ((icmp_ln899_1_reg_2454[0:0] === 1'b1) ? tmp_15_fu_1326_p5 : col_buf_1_val_2_0_fu_1244_p3);

assign src_kernel_win_2_va_10_fu_1463_p3 = ((icmp_ln899_1_reg_2454[0:0] === 1'b1) ? tmp_22_fu_1452_p5 : col_buf_2_val_1_0_fu_1382_p3);

assign src_kernel_win_2_va_11_fu_1481_p3 = ((icmp_ln899_1_reg_2454[0:0] === 1'b1) ? tmp_23_fu_1470_p5 : col_buf_2_val_2_0_fu_1400_p3);

assign src_kernel_win_2_va_9_fu_1445_p3 = ((icmp_ln899_1_reg_2454[0:0] === 1'b1) ? tmp_21_fu_1434_p5 : col_buf_2_val_0_0_fu_1364_p3);

assign sub_ln1118_1_fu_1560_p2 = (9'd0 - zext_ln1118_2_fu_1556_p1);

assign sub_ln1118_2_fu_1678_p2 = (10'd0 - zext_ln1118_4_fu_1674_p1);

assign sub_ln1118_3_fu_1712_p2 = (9'd0 - zext_ln1118_5_fu_1708_p1);

assign sub_ln1118_4_fu_1830_p2 = (10'd0 - zext_ln1118_7_fu_1826_p1);

assign sub_ln1118_5_fu_1864_p2 = (9'd0 - zext_ln1118_8_fu_1860_p1);

assign sub_ln1118_fu_1526_p2 = (10'd0 - zext_ln1118_1_fu_1522_p1);

assign sub_ln118_fu_779_p2 = ($signed(2'd2) - $signed(trunc_ln142_fu_721_p1));

assign sub_ln142_1_fu_669_p2 = (11'd1 - zext_ln443_fu_557_p1);

assign sub_ln142_fu_930_p2 = (12'd1 - zext_ln444_fu_858_p1);

assign sub_ln147_fu_950_p2 = ($signed(12'd2558) - $signed(select_ln139_fu_936_p3));

assign sub_ln507_fu_693_p2 = ($signed(2'd2) - $signed(trunc_ln507_fu_683_p1));

assign sub_ln703_1_fu_1536_p2 = (src_kernel_win_0_va_8_reg_2609 - src_kernel_win_0_va_5_fu_190);

assign sub_ln703_2_fu_1656_p2 = (zext_ln703_3_fu_1653_p1 - zext_ln1118_3_fu_1649_p1);

assign sub_ln703_3_fu_1688_p2 = (src_kernel_win_1_va_8_reg_2630 - src_kernel_win_1_va_5_fu_214);

assign sub_ln703_4_fu_1808_p2 = (zext_ln703_6_fu_1805_p1 - zext_ln1118_6_fu_1801_p1);

assign sub_ln703_5_fu_1840_p2 = (src_kernel_win_2_va_11_reg_2651 - src_kernel_win_2_va_5_fu_238);

assign sub_ln703_fu_1504_p2 = (zext_ln703_fu_1501_p1 - zext_ln1118_fu_1497_p1);

assign tmp_12_fu_635_p3 = add_ln506_fu_623_p2[32'd10];

assign tmp_16_fu_1776_p4 = {{p_Val2_3_fu_1751_p2[10:8]}};

assign tmp_1_fu_1624_p4 = {{p_Val2_s_fu_1599_p2[10:8]}};

assign tmp_20_fu_661_p3 = add_ln506_fu_623_p2[32'd10];

assign tmp_24_fu_1928_p4 = {{p_Val2_6_fu_1903_p2[10:8]}};

assign tmp_27_fu_705_p3 = add_ln506_1_fu_699_p2[32'd10];

assign tmp_28_fu_713_p3 = add_ln506_1_fu_699_p2[32'd10];

assign tmp_29_fu_731_p3 = add_ln506_2_fu_725_p2[32'd10];

assign tmp_30_fu_739_p3 = add_ln506_2_fu_725_p2[32'd10];

assign tmp_31_fu_874_p4 = {{t_V_2_reg_534[10:1]}};

assign tmp_32_fu_896_p3 = add_ln451_fu_890_p2[32'd11];

assign tmp_33_fu_922_p3 = add_ln451_fu_890_p2[32'd11];

assign tmp_fu_585_p4 = {{t_V_reg_523[9:1]}};

assign trunc_ln118_1_fu_823_p1 = add_ln506_2_fu_725_p2[1:0];

assign trunc_ln118_fu_785_p1 = add_ln506_1_fu_699_p2[1:0];

assign trunc_ln142_1_fu_747_p1 = t_V_reg_523[1:0];

assign trunc_ln142_fu_721_p1 = t_V_reg_523[1:0];

assign trunc_ln458_fu_976_p1 = select_ln118_fu_964_p3[1:0];

assign trunc_ln506_fu_619_p1 = t_V_reg_523[1:0];

assign trunc_ln507_fu_683_p1 = select_ln139_1_fu_675_p3[1:0];

assign trunc_ln703_1_fu_1570_p1 = sub_ln1118_1_fu_1560_p2[7:0];

assign trunc_ln703_2_fu_1693_p1 = sub_ln1118_2_fu_1678_p2[7:0];

assign trunc_ln703_3_fu_1722_p1 = sub_ln1118_3_fu_1712_p2[7:0];

assign trunc_ln703_4_fu_1845_p1 = sub_ln1118_4_fu_1830_p2[7:0];

assign trunc_ln703_5_fu_1874_p1 = sub_ln1118_5_fu_1864_p2[7:0];

assign trunc_ln703_fu_1541_p1 = sub_ln1118_fu_1526_p2[7:0];

assign xor_ln118_1_fu_643_p2 = (tmp_12_fu_635_p3 ^ 1'd1);

assign xor_ln118_2_fu_817_p2 = (trunc_ln142_1_fu_747_p1 ^ 2'd3);

assign xor_ln118_3_fu_904_p2 = (tmp_32_fu_896_p3 ^ 1'd1);

assign xor_ln118_fu_773_p2 = (trunc_ln506_fu_619_p1 ^ 2'd2);

assign xor_ln457_fu_579_p2 = (icmp_ln887_fu_573_p2 ^ 1'd1);

assign xor_ln493_1_fu_767_p2 = (select_ln507_1_fu_759_p3 ^ 2'd3);

assign xor_ln493_2_fu_805_p2 = (select_ln118_1_fu_797_p3 ^ 2'd3);

assign xor_ln493_3_fu_843_p2 = (select_ln118_2_fu_835_p3 ^ 2'd3);

assign xor_ln493_fu_1021_p2 = (trunc_ln458_reg_2519 ^ 2'd3);

assign xor_ln785_1_fu_2114_p2 = (p_Result_1_reg_2679 ^ 1'd1);

assign xor_ln785_2_fu_2161_p2 = (p_Result_2_reg_2700 ^ 1'd1);

assign xor_ln785_fu_2067_p2 = (p_Result_s_reg_2658 ^ 1'd1);

assign zext_ln1118_1_fu_1522_p1 = shl_ln_fu_1514_p3;

assign zext_ln1118_2_fu_1556_p1 = src_kernel_win_0_va_1_fu_174;

assign zext_ln1118_3_fu_1649_p1 = src_kernel_win_1_va_5_fu_214;

assign zext_ln1118_4_fu_1674_p1 = shl_ln1118_2_fu_1666_p3;

assign zext_ln1118_5_fu_1708_p1 = src_kernel_win_1_va_1_fu_198;

assign zext_ln1118_6_fu_1801_p1 = src_kernel_win_2_va_5_fu_238;

assign zext_ln1118_7_fu_1826_p1 = shl_ln1118_4_fu_1818_p3;

assign zext_ln1118_8_fu_1860_p1 = src_kernel_win_2_va_1_fu_222;

assign zext_ln1118_fu_1497_p1 = src_kernel_win_0_va_5_fu_190;

assign zext_ln443_fu_557_p1 = t_V_reg_523;

assign zext_ln444_fu_858_p1 = t_V_2_reg_534;

assign zext_ln703_1_fu_1552_p1 = shl_ln1118_1_fu_1545_p3;

assign zext_ln703_2_fu_1574_p1 = src_kernel_win_0_va_6_reg_2595;

assign zext_ln703_3_fu_1653_p1 = src_kernel_win_1_va_8_reg_2630;

assign zext_ln703_4_fu_1704_p1 = shl_ln1118_3_fu_1697_p3;

assign zext_ln703_5_fu_1726_p1 = src_kernel_win_1_va_6_reg_2616;

assign zext_ln703_6_fu_1805_p1 = src_kernel_win_2_va_11_reg_2651;

assign zext_ln703_7_fu_1856_p1 = shl_ln1118_5_fu_1849_p3;

assign zext_ln703_8_fu_1878_p1 = src_kernel_win_2_va_9_reg_2637;

assign zext_ln703_fu_1501_p1 = src_kernel_win_0_va_8_reg_2609;

assign zext_ln835_fu_985_p1 = $unsigned(sext_ln118_fu_972_p1);

endmodule //Filter2D
